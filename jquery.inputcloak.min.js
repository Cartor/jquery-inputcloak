//Author: Philip Ermish
//Created: 12/7/2015
//License: GNU General Public License
// 	This program is free software: you can redistribute it and/or modify
// 	it under the terms of the GNU General Public License as published by
// 	the Free Software Foundation, either version 3 of the License, or
//	 (at your option) any later version.

// 	This program is distributed in the hope that it will be useful,
// 	but WITHOUT ANY WARRANTY; without even the implied warranty of
// 	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//	 GNU General Public License for more details.

// 	You should have received a copy of the GNU General Public License
// 	along with this program.  If not, see <http://www.gnu.org/licenses/>.


(function($) {
    $.fn.inputCloak = function(userSettings) {
        return this.each(function() {
            //////private variables
            var $element = $(this);
            var $cloakedElement;
    
            var defaults = {
                type: 'all', //ssn, credit, all
                symbol : '*', //Options: *, \u2022 (dot), x
                delay: 0,
                revealOnFocus: true,
                cloakOnBlur: true,
                customCloak : undefined
            };
    
            ///////public variables
            $element.settings = $.extend({}, defaults, userSettings); //Merge default settings with the user settings
            $element._defaults = defaults;
            $element._name = 'inputCloak';
    
            //////Public Methods
            $element.cloak = function(value) {
                if($element.settings.customCloak){
                    $element.settings.customCloak(value, $element, $cloakedElement);
                    return true;
                }
    
                var symbol = $element.settings.symbol;
                var cloakedValue;
    
                switch($element.settings.type.toLowerCase()){
                    case 'ssn':
                        cloakedValue = Array(3 + 1).join(symbol) + '-' +
                                           Array(2 + 1).join(symbol)  + '-' +
                                           value.substr(value.length-4, 4); //***-**-1234
                        break;
                    case 'credit':
                        cloakedValue = symbol + value.substr(value.length-4, 4);//*1234
                        break;
                    default:
                        cloakedValue = Array(value.length + 1).join($element.settings.symbol); //1234 -> ****
                        break;
                }
    
                $cloakedElement.val(cloakedValue);
                $element.val(value);
    
                return this; //So jquery chaining will still work
            };
    
            $element.reveal = function() {
                $cloakedElement.val($element.val());
    
                return this; //So jquery chaining will still work
            };
    
    
            //////Private Methods
            var init = function(){
                createCloakedElement($element);
    
                $cloakedElement.on('focus', function(e){
                    $element.reveal(e.currentTarget.value);
                });
    
                $cloakedElement.on('blur', function(e){
                    //$element.cloak(e.currentTarget.value);
                    setTimeout(function(){
                        $element.cloak(e.currentTarget.value);
                    }, $element.settings.delay);
                });
            };
    
            var createCloakedElement = function(){
                var cloakedId = 'cloaked' + Math.floor((Math.random() * 100000000) + 1);
                $cloakedElement = $element.clone();
                $cloakedElement.attr('id','#' + cloakedId);
                $cloakedElement.removeAttr('name');
    
                $element.css( "display", "none" );
                $element.after($cloakedElement);
            };
    
            init();
    
            return this;  //So jquery chaining will still work
        });
    };
})(jQuery);
